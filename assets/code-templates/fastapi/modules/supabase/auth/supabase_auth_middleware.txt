from fastapi import HTTPException, Request
from starlette.status import HTTP_401_UNAUTHORIZED
from supabase import Client

async def supabase_auth_middleware(req: Request):
    supabase_cli: Client = req.app.state.supabase_cli

    # Extract the authorization header
    auth_header = req.headers.get("authorization")
    if not auth_header:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED, detail="Authorization header missing"
        )

    # Token verification
    token = auth_header.split(" ")[1] if len(auth_header.split(" ")) > 1 else None
    if not token:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED,
            detail="Invalid authorization header format",
        )

    try:
        # Verify the token with Supabase
        data = supabase_cli.auth.get_user(token)

        # Add user information to the request state, if needed
        req.state.user = data.user

    except Exception as e:
        print("Failed to verify auth token:", e)
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED, detail="Invalid token or user not found"
        )

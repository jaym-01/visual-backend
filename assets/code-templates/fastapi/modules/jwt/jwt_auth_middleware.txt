from fastapi import HTTPException, Request
from starlette.status import HTTP_401_UNAUTHORIZED
from src.modules.jwt.parse_token import parse_token


def jwt_auth_middleware(req: Request):
    # Extract the authorization header
    auth_header = req.headers.get("authorization")
    if not auth_header:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED, detail="Authorization header missing"
        )

    # Token verification
    token = auth_header.split(" ")[1] if len(auth_header.split(" ")) > 1 else None
    if not token:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED,
            detail="Invalid authorization header format",
        )

    decoded_token = parse_token(token, "access")
    if not decoded_token:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED,
            detail="invalid token",
        )

    # do something with decoded_token
    # e.g. req.state.user_id = decoded_token["user_id"]

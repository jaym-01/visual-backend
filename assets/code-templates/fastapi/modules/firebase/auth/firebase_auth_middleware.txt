from fastapi import HTTPException, Request
from starlette.status import HTTP_401_UNAUTHORIZED
from firebase_admin import auth


async def firebase_auth_middleware(req: Request):
    # Extract the authorization header
    auth_header = req.headers.get("authorization")
    if not auth_header:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED, detail="Authorization header missing"
        )

    # Token verification
    token = auth_header.split(" ")[1] if len(auth_header.split(" ")) > 1 else None
    if not token:
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED,
            detail="Invalid authorization header format",
        )

    # Verify token with firebase
    try:
        decoded_token = auth.verify_id_token(token)
        req.state.user_id = decoded_token["user_id"]
        req.state.email = decoded_token["email"]

    except Exception as e:
        print("Failed to verify id token:", e)
        raise HTTPException(
            status_code=HTTP_401_UNAUTHORIZED, detail="Invalid token or user not found"
        )
